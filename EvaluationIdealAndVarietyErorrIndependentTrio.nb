(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     47902,       1333]
NotebookOptionsPosition[     44546,       1268]
NotebookOutlinePosition[     44994,       1286]
CellTagsIndexPosition[     44951,       1283]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Evaluation ideal and variety for a trio of error independent binary \
classifiers\
\>", "Title",
 CellChangeTimes->{{3.8792303443240547`*^9, 
  3.8792303599056273`*^9}},ExpressionUUID->"29955daf-01cd-4fcb-bae4-\
b31c33b32906"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.879231317817143*^9, 
  3.879231321385253*^9}},ExpressionUUID->"cfcc22cd-6c56-4439-b0bd-\
f5f657cbab6b"],

Cell["\<\
This notebook will detail the algebraic geometry computations that take us \
from the \[OpenCurlyDoubleQuote]evaluation ideal\[CloseCurlyDoubleQuote] \
created from the voting patterns of a trio of binary classifiers to the \
\[OpenCurlyDoubleQuote]evaluation variety\[CloseCurlyDoubleQuote]. An \
evaluation ideal is a set of polynomials connecting observable voting pattern \
frequencies by the classifiers to unknown sample statistics of the ground \
truth that are our evaluation goal. We want to \[OpenCurlyDoubleQuote]grade\
\[CloseCurlyDoubleQuote] the classifiers using only the frequencies of their \
voting patterns.

That \[OpenCurlyDoubleQuote]grade\[CloseCurlyDoubleQuote] exists in sample \
statistics space. The test has already been taken. We have the decisions of \
the judges. We are faced with the task of grading them now. Not in the \
future, not in the past. This is another example of how the task of \
evaluation is much simpler than that of training. We have to estimate \
something that already exists, if you will. And there is only one time we \
have to do it. Training is much harder. You must create judges that, in the \
future, will behave correctly. And they have to do it many times. The task of \
evaluation is trivial in comparison. Why have we not conquered this much \
simpler space of the whole enterprise of learning?\
\>", "Text",
 CellChangeTimes->{{3.8792313277041397`*^9, 
  3.8792317826122007`*^9}},ExpressionUUID->"ef8202ac-beed-4046-9382-\
e6a1e9c61684"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Algebraic geometry of three error independent binary classifiers\
\>", "Section",
 CellChangeTimes->{{3.8794011656852694`*^9, 
  3.879401179156719*^9}},ExpressionUUID->"26697b35-35f1-4bb2-911b-\
f7e819fd94e0"],

Cell["\<\
The mathematics of algebraic evaluation is algebraic geometry. Every \
algebraic evaluation problem can be stated as a polynomial system relating \
observable decision events to unknown sample statistics. Here we are going to \
define that polynomial system assuming that the classifiers made errors \
independently on the sample. This is \[OpenCurlyDoubleQuote]the spherical cow\
\[CloseCurlyDoubleQuote] of Evaluation Land - the simplifying assumption that \
allows you to proceed forward and carry out computations that give you \
insight into the original problem. Workers in Training Land also have a \
preferred spherical cow - \[OpenCurlyDoubleQuote]consider an identically, \
independently drawn sample\[CloseCurlyDoubleQuote].  It may take some getting \
used to this new cow if you are a new visitor from Training Land.\
\>", "Text",
 CellChangeTimes->{{3.879485474552417*^9, 3.879485597088883*^9}, {
  3.879485633187848*^9, 3.8794857866434307`*^9}, {3.879485825385746*^9, 
  3.879485861737652*^9}, {3.8794887370388107`*^9, 
  3.8794887753076153`*^9}},ExpressionUUID->"59b48089-8f3d-4587-9524-\
888d94a66bba"],

Cell[CellGroupData[{

Cell["\<\
The evaluation ideal of three error independent binary classifiers\
\>", "Subsection",
 CellChangeTimes->{{3.879488808441266*^9, 
  3.8794888299074373`*^9}},ExpressionUUID->"0fa8a40e-7e8f-4b49-a722-\
2308777a2285"],

Cell["\<\
Algebraic geometry is mainly the study of the connection between sets of \
polynomials and geometric objects in the variable space of those polynomials. \
The sets of polynomials are called \[OpenCurlyDoubleQuote]polynomial ideals\
\[CloseCurlyDoubleQuote]. A set of linear equations is also a polynomial \
ideal. We define the \[OpenCurlyDoubleQuote]evaluation ideal\
\[CloseCurlyDoubleQuote] of our evaluation to be,\
\>", "Text",
 CellChangeTimes->{{3.879488873090189*^9, 3.879489000076497*^9}, {
  3.879489105606357*^9, 3.879489129086569*^9}, {3.879489191067916*^9, 
  3.8794892304004183`*^9}},ExpressionUUID->"ba358991-b2cc-44ad-aee7-\
9d420cfdbc7b"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MakeIndependentVotingIdeal", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MakeIndependentVotingIdeal", "[", 
   RowBox[{"{", 
    RowBox[{"i_", ",", "j_", ",", "k_"}], "}"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      SubscriptBox["P", 
       RowBox[{"i", ",", "\[Alpha]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"j", ",", "\[Alpha]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"k", ",", "\[Alpha]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"i", ",", "\[Beta]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"j", ",", "\[Beta]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"k", ",", "\[Beta]"}]]}], ")"}]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Alpha]", ",", "\[Alpha]", ",", "\[Alpha]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      SubscriptBox["P", 
       RowBox[{"i", ",", "\[Alpha]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"j", ",", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"k", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"i", ",", "\[Beta]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"j", ",", "\[Beta]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"k", ",", "\[Beta]"}]]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Alpha]", ",", "\[Alpha]", ",", "\[Beta]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      SubscriptBox["P", 
       RowBox[{"i", ",", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"j", ",", "\[Alpha]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"k", ",", "\[Alpha]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"i", ",", "\[Beta]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"j", ",", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"k", ",", "\[Beta]"}]]}], ")"}]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      SubscriptBox["P", 
       RowBox[{"i", ",", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"j", ",", "\[Alpha]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"k", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"i", ",", "\[Beta]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"j", ",", "\[Beta]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"k", ",", "\[Beta]"}]]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Beta]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"i", ",", "\[Alpha]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"j", ",", "\[Alpha]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"k", ",", "\[Alpha]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"i", ",", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"j", ",", "\[Beta]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"k", ",", "\[Beta]"}]]}], ")"}]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "\[Alpha]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"i", ",", "\[Alpha]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"j", ",", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"k", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"i", ",", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"j", ",", "\[Beta]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"k", ",", "\[Beta]"}]]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "\[Beta]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"i", ",", "\[Alpha]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"j", ",", "\[Alpha]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"k", ",", "\[Alpha]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"i", ",", "\[Beta]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"j", ",", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"k", ",", "\[Beta]"}]]}], ")"}]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Beta]", ",", "\[Beta]", ",", "\[Alpha]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"i", ",", "\[Alpha]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"j", ",", "\[Alpha]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"k", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"i", ",", "\[Beta]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"j", ",", "\[Beta]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"k", ",", "\[Beta]"}]]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Beta]", ",", "\[Beta]", ",", "\[Beta]"}]]}]}], 
   "}"}]}]}], "Input",
 CellLabel->
  "In[3165]:=",ExpressionUUID->"4b402a15-46d2-4e52-a54d-617a20fcc358"],

Cell["\<\
One convention in algebraic geometry may bother you. Ultimately we are \
interested in the geometrical object these polynomials define in the finite \
space needed for evaluating three independent binary classifiers. We want to \
consider the points in sample statistics space where all these equations are \
zero. We are really interested in these equations,\
\>", "Text",
 CellChangeTimes->{{3.8794893377771273`*^9, 
  3.879489466800818*^9}},ExpressionUUID->"2a442400-cf1f-4299-8845-\
32f7234773bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MakeIndependentVotingIdeal", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "//", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "==", "0"}], ")"}], "&"}], ",", "#"}], "]"}], 
   "&"}]}]], "Input",
 CellChangeTimes->{{3.879489472073496*^9, 3.879489502223925*^9}},
 CellLabel->
  "In[3167]:=",ExpressionUUID->"ae53098f-35e0-4686-8bb4-f34999b06f01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Alpha]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Alpha]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Alpha]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"1", ",", "\[Beta]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"2", ",", "\[Beta]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"3", ",", "\[Beta]"}]]}], ")"}]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Alpha]", ",", "\[Alpha]", ",", "\[Alpha]"}]]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Alpha]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"3", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"1", ",", "\[Beta]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"2", ",", "\[Beta]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Beta]"}]]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Alpha]", ",", "\[Alpha]", ",", "\[Beta]"}]]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"2", ",", "\[Alpha]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Alpha]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"1", ",", "\[Beta]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"3", ",", "\[Beta]"}]]}], ")"}]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]"}]]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"2", ",", "\[Alpha]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"3", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"1", ",", "\[Beta]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Beta]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Beta]"}]]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Beta]"}]]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"1", ",", "\[Alpha]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Alpha]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Alpha]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"2", ",", "\[Beta]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"3", ",", "\[Beta]"}]]}], ")"}]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "\[Alpha]"}]]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"1", ",", "\[Alpha]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"3", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"2", ",", "\[Beta]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Beta]"}]]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "\[Beta]"}]]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"1", ",", "\[Alpha]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"2", ",", "\[Alpha]"}]]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Alpha]"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Beta]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Beta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"3", ",", "\[Beta]"}]]}], ")"}]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Beta]", ",", "\[Beta]", ",", "\[Alpha]"}]]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["P", "\[Alpha]"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"1", ",", "\[Alpha]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"2", ",", "\[Alpha]"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", 
         RowBox[{"3", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
      SubscriptBox["P", 
       RowBox[{"1", ",", "\[Beta]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"2", ",", "\[Beta]"}]], " ", 
      SubscriptBox["P", 
       RowBox[{"3", ",", "\[Beta]"}]]}], "-", 
     SubscriptBox["f", 
      RowBox[{"\[Beta]", ",", "\[Beta]", ",", "\[Beta]"}]]}], "\[Equal]", 
    "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8794895036585283`*^9},
 CellLabel->
  "Out[3167]=",ExpressionUUID->"a6dcb80a-270f-46c6-9bab-8d068a4657e8"]
}, Open  ]],

Cell["\<\
But it is a pain to carry all these equal to zero notation around. So we drop \
it,  and prefer to work with,\
\>", "Text",
 CellChangeTimes->{{3.879489509132609*^9, 3.87948954878049*^9}, {
   3.879489584501289*^9, 3.8794895879830008`*^9}, 
   3.879489867027985*^9},ExpressionUUID->"a3e208f5-c83e-4e2a-a172-\
03d8574d202e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MakeIndependentVotingIdeal", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[3168]:=",ExpressionUUID->"2dfe4717-a495-4e76-9f34-dafbd736f7d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[Alpha]"], " ", 
     SubscriptBox["P", 
      RowBox[{"1", ",", "\[Alpha]"}]], " ", 
     SubscriptBox["P", 
      RowBox[{"2", ",", "\[Alpha]"}]], " ", 
     SubscriptBox["P", 
      RowBox[{"3", ",", "\[Alpha]"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"1", ",", "\[Beta]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"2", ",", "\[Beta]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"3", ",", "\[Beta]"}]]}], ")"}]}], "-", 
    SubscriptBox["f", 
     RowBox[{"\[Alpha]", ",", "\[Alpha]", ",", "\[Alpha]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[Alpha]"], " ", 
     SubscriptBox["P", 
      RowBox[{"1", ",", "\[Alpha]"}]], " ", 
     SubscriptBox["P", 
      RowBox[{"2", ",", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"3", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"1", ",", "\[Beta]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"2", ",", "\[Beta]"}]]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"3", ",", "\[Beta]"}]]}], "-", 
    SubscriptBox["f", 
     RowBox[{"\[Alpha]", ",", "\[Alpha]", ",", "\[Beta]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[Alpha]"], " ", 
     SubscriptBox["P", 
      RowBox[{"1", ",", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"2", ",", "\[Alpha]"}]]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"3", ",", "\[Alpha]"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"1", ",", "\[Beta]"}]]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"2", ",", "\[Beta]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"3", ",", "\[Beta]"}]]}], ")"}]}], "-", 
    SubscriptBox["f", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Alpha]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[Alpha]"], " ", 
     SubscriptBox["P", 
      RowBox[{"1", ",", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"2", ",", "\[Alpha]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"3", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"1", ",", "\[Beta]"}]]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"2", ",", "\[Beta]"}]], " ", 
     SubscriptBox["P", 
      RowBox[{"3", ",", "\[Beta]"}]]}], "-", 
    SubscriptBox["f", 
     RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Beta]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[Alpha]"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"1", ",", "\[Alpha]"}]]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"2", ",", "\[Alpha]"}]], " ", 
     SubscriptBox["P", 
      RowBox[{"3", ",", "\[Alpha]"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"1", ",", "\[Beta]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"2", ",", "\[Beta]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"3", ",", "\[Beta]"}]]}], ")"}]}], "-", 
    SubscriptBox["f", 
     RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "\[Alpha]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[Alpha]"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"1", ",", "\[Alpha]"}]]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"2", ",", "\[Alpha]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"3", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"1", ",", "\[Beta]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"2", ",", "\[Beta]"}]]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"3", ",", "\[Beta]"}]]}], "-", 
    SubscriptBox["f", 
     RowBox[{"\[Beta]", ",", "\[Alpha]", ",", "\[Beta]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[Alpha]"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"1", ",", "\[Alpha]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"2", ",", "\[Alpha]"}]]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"3", ",", "\[Alpha]"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"1", ",", "\[Beta]"}]], " ", 
     SubscriptBox["P", 
      RowBox[{"2", ",", "\[Beta]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"3", ",", "\[Beta]"}]]}], ")"}]}], "-", 
    SubscriptBox["f", 
     RowBox[{"\[Beta]", ",", "\[Beta]", ",", "\[Alpha]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[Alpha]"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"1", ",", "\[Alpha]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"2", ",", "\[Alpha]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", 
        RowBox[{"3", ",", "\[Alpha]"}]]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["P", "\[Alpha]"]}], ")"}], " ", 
     SubscriptBox["P", 
      RowBox[{"1", ",", "\[Beta]"}]], " ", 
     SubscriptBox["P", 
      RowBox[{"2", ",", "\[Beta]"}]], " ", 
     SubscriptBox["P", 
      RowBox[{"3", ",", "\[Beta]"}]]}], "-", 
    SubscriptBox["f", 
     RowBox[{"\[Beta]", ",", "\[Beta]", ",", "\[Beta]"}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8794895607793093`*^9},
 CellLabel->
  "Out[3168]=",ExpressionUUID->"054b0565-2374-4169-b4c0-ae525c4fa3bf"]
}, Open  ]],

Cell["\<\
Dropping the notation has no effect. Algebraic manipulations of the above set \
(multiplying them together, etc.) would be equivalent to polynomials of zero \
for points that satisfied the input set.

One \[OpenCurlyDoubleQuote]forest for the trees\[CloseCurlyDoubleQuote] note: \
the above ideal is one many possible ones. Algebraic evaluation is very much \
like data streaming algorithms. You are creating a sketch of the decisions by \
an ensemble of noisy judges. In the case of binary classification considered \
here, that \[OpenCurlyDoubleQuote]data sketch\[CloseCurlyDoubleQuote] is the \
frequency of their item-by-item voting patterns. Other polynomial systems are \
possible even for independent binary classifiers. We could be trying to \
evaluate sample statistics that look at how judges evaluated two different \
sample items, for example.\
\>", "Text",
 CellChangeTimes->{{3.879489720554055*^9, 3.8794898520643253`*^9}, {
  3.8794898956654577`*^9, 3.8794901040361147`*^9}, {3.879490138563158*^9, 
  3.879490143812853*^9}},ExpressionUUID->"c6921f84-0952-411c-bd4c-\
2ec1227b70bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The evaluation variety of three error independent binary classifiers\
\>", "Subsection",
 CellChangeTimes->{{3.8794901609454803`*^9, 
  3.879490191938344*^9}},ExpressionUUID->"952d73fb-ffe1-4f30-b632-\
2751d60469b8"],

Cell["\<\
The goal of algebraic evaluation is to obtain \[OpenCurlyDoubleQuote]grades\
\[CloseCurlyDoubleQuote] for the noisy judges on unlabeled data. We know the \
types of grades we want. We want their exact grades. Not spreads of where we \
think their grade is - no probabilistic solutions! That is not quite what we \
get in algebraic evaluation. The mathematical object you get as a grade is \
actually a geometric object in sample statistics space. The true grade lies \
on that geometric object. Mathematicians call the geometrical objects defined \
by polynomials - varieties. You will see that for error-independent binary \
classifiers that geometric object is almost what we want - a collection of \
two points. For correlated classifiers those points \
\[OpenCurlyDoubleQuote]bloom out\[CloseCurlyDoubleQuote]. It is an unsolved \
problem in algebraic evaluation to characterize the surface for correlated \
classifiers - but it does exist! The evaluation ideal for any set of \
correlated classifiers can be written down and it defines, by construction, \
an evaluation variety that is guaranteed to contain the true evaluation point \
for the classifiers. All that is left when you build the evaluation ideal is \
to figure out what that surface is and whether it would be useful to your AI \
safety task.\
\>", "Text",
 CellChangeTimes->{{3.879657045981392*^9, 
  3.879657562292131*^9}},ExpressionUUID->"e848c97a-cbd6-4562-bfc0-\
ea38be34ae2e"],

Cell[CellGroupData[{

Cell["A quick look at evaluation", "Subsubsection",
 CellChangeTimes->{{3.879657582108775*^9, 
  3.879657620138989*^9}},ExpressionUUID->"0715499f-bd76-4a66-970d-\
b2383d41263c"],

Cell["\<\
Before continuing to present the formalism of algebraic evaluation, let\
\[CloseCurlyQuote]s do a quick end run to our goal - the grade for noisy \
binary classifiers. I\[CloseCurlyQuote]ll use the UCI Adult run that can be \
found in the Python code - AlgebraicEvaluation.py. The input to algebraic \
evaluation in our current application is the frequency of voting patterns by \
the classifiers. Here is how it looked for a single run of three binary \
classifiers on the UCI Adult dataset.\
\>", "Text",
 CellChangeTimes->{{3.879657627510211*^9, 
  3.879657816727069*^9}},ExpressionUUID->"72532dfa-b80b-496c-b932-\
be6e02db66ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"singleEvaluationUCIAdult", " ", "=", " ", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"0", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], "\[Rule]", "715"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "161"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], "\[Rule]", "2406"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "1"}], "}"}], "\[Rule]", "455"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "290"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "1"}], "}"}], "\[Rule]", "94"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], "\[Rule]", "1335"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", "231"}]}], 
      "\[RightAssociation]"}]}], ",", 
    RowBox[{"1", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], "\[Rule]", "271"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "469"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], "\[Rule]", "3395"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "1"}], "}"}], "\[Rule]", "7517"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "272"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "1"}], "}"}], "\[Rule]", "399"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0"}], "}"}], "\[Rule]", "6377"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", "12455"}]}], 
      "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.879657926000263*^9, 3.8796579367358437`*^9}},
 CellLabel->
  "In[3169]:=",ExpressionUUID->"8506ac0d-d695-4f48-93af-2780a059e8c6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "\[Rule]", "715"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "161"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], "\[Rule]", "2406"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], "\[Rule]", "455"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "290"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1"}], "}"}], "\[Rule]", "94"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}], "\[Rule]", "1335"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", "231"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], "\[Rule]", "271"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "469"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}], "\[Rule]", "3395"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "1"}], "}"}], "\[Rule]", "7517"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "272"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "1"}], "}"}], "\[Rule]", "399"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}], "\[Rule]", "6377"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", "12455"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.879657953705823*^9},
 CellLabel->
  "Out[3169]=",ExpressionUUID->"fd5ad141-270f-4d3c-a628-c4d00e257bab"]
}, Open  ]],

Cell["\<\
This is not a randomly selected run of binary classifiers on the UCI Adult \
dataset. It is being used for various reasons. It was engineered to be as \
close to error independence as possible.  This will be discussed more later. \
For now, let\[CloseCurlyQuote]s verify that, in fact, the classifiers are \
near error independence in this sample.\
\>", "Text",
 CellChangeTimes->{{3.8796579781760817`*^9, 3.879658050961401*^9}, {
  3.879658087495729*^9, 
  3.879658135992023*^9}},ExpressionUUID->"53622335-0b48-4a47-905e-\
bb58945fecd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evaluationGroundTruth", " ", "=", " ", 
  RowBox[{"GTClassifiers", "[", "singleEvaluationUCIAdult", "]"}]}]], "Input",\

 CellChangeTimes->{{3.879658224646476*^9, 3.879658251232798*^9}},
 CellLabel->
  "In[3220]:=",ExpressionUUID->"bfcb247c-358a-4f3f-a429-2b911b0f067c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    SubscriptBox["P", "\[Alpha]"], "\[Rule]", 
    FractionBox["5687", "36842"]}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", 
    FractionBox["3737", "5687"]}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", 
    FractionBox["1260", "5687"]}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", 
    FractionBox["4746", "5687"]}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", 
    FractionBox["6501", "10385"]}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", 
    FractionBox["29744", "31155"]}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", 
    FractionBox["4168", "6231"]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "\[Alpha]"}]], "\[Rule]", 
    FractionBox["273192", "32341969"]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    FractionBox["13325", "32341969"]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["264525", "32341969"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "\[Beta]"}]], "\[Rule]", 
    FractionBox["2204576", "323544675"]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["79682", "12941787"]}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    FractionBox["94508", "38825361"]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    FractionBox["452568508", "183928777703"]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    RowBox[{"-", 
     FractionBox["27265589", "134400457995"]}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.879658234019175*^9, 3.879658258986566*^9}},
 CellLabel->
  "Out[3220]=",ExpressionUUID->"1208149e-cb43-4ae1-b450-d0c285a1bbbc"]
}, Open  ]],

Cell["\<\
The evaluation ground truth is what we want. It was calculated above by \
cheating - we have the by-label counts so we can easily compute ALL the \
sample statistics required to explain exactly the frequency patterns we \
observe when we DO NOT have the knowledge of the true labels. Note that the \
evaluation ground truth are integer ratios. The exact sample statistics for \
evaluation are a subset of the real numbers. This is crucial. This allows \
algebraic evaluators to get closer to the true grades. Integer ratios are \
also in the field of algebraic numbers. But the field of algebraic numbers is \
less dense than reals!

This evaluation also reminds the reader of why evaluation is easier than \
training. There are no unknown unknowns. Evaluation computes sample \
statistics. The space of sample statistics required to explain observable \
voting patterns is finite and complete. You may not know what all these \
sample statistics are, but they are all you would need to know to describe \
the frequency of their observed decisions.

It is hard to compare integer ratios so let\[CloseCurlyQuote]s get the \
floating point approximation to the evaluation to confirm the claim that \
these classifiers are nearly error independent.\
\>", "Text",
 CellChangeTimes->{{3.879658266862031*^9, 3.879658574597755*^9}, {
  3.879658665574068*^9, 3.879658765019106*^9}, {3.8796588053923473`*^9, 
  3.879658919613491*^9}},ExpressionUUID->"6512745a-9d1f-4a5e-b0e4-\
c0ab49cdd87d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"evaluationGroundTruth", "//", "N"}]], "Input",
 CellChangeTimes->{{3.879658722392478*^9, 3.879658726101561*^9}},
 CellLabel->
  "In[3221]:=",ExpressionUUID->"6350e80b-2e3e-47c8-bdf6-e3e4cbdfd897"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    SubscriptBox["P", "\[Alpha]"], "\[Rule]", "0.15436186960534173`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"1", ",", "\[Alpha]"}]], "\[Rule]", "0.6571127132055565`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "\[Alpha]"}]], "\[Rule]", "0.22155793915948654`"}], 
   ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"3", ",", "\[Alpha]"}]], "\[Rule]", "0.8345349041673993`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"1", ",", "\[Beta]"}]], "\[Rule]", "0.625999037072701`"}], ",", 
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"2", ",", "\[Beta]"}]], "\[Rule]", "0.9547103193708875`"}], ",", 
   
   RowBox[{
    SubscriptBox["P", 
     RowBox[{"3", ",", "\[Beta]"}]], "\[Rule]", "0.6689134970309741`"}], ",", 
   
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "\[Alpha]"}]], "\[Rule]", 
    "0.008446981072797392`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    "0.00041200336318422665`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    RowBox[{"-", "0.008179001099160041`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "\[Beta]"}]], "\[Rule]", 
    "0.0068138225424356005`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    RowBox[{"-", "0.006156954986200901`"}]}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    "0.0024341821316226785`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "3", ",", "\[Alpha]"}]], "\[Rule]", 
    "0.002460563885934084`"}], ",", 
   RowBox[{
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"1", ",", "2", ",", "3", ",", "\[Beta]"}]], "\[Rule]", 
    RowBox[{"-", "0.00020286827445940953`"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.879658727207533*^9},
 CellLabel->
  "Out[3221]=",ExpressionUUID->"fbe030e8-1234-40b1-af0f-94ad29e7cf95"]
}, Open  ]],

Cell[TextData[{
 "One can see that all the pair error correlation terms (",
 Cell[BoxData[
  SubscriptBox["\[CapitalGamma]", 
   RowBox[{"i", ",", "j", ",", "label"}]]],
  CellChangeTimes->{3.879658727207533*^9},ExpressionUUID->
  "518a4323-a077-44ae-9e65-3a2fa9136f71"],
 ") are less that 1% absolute."
}], "Text",
 CellChangeTimes->{{3.879658931584025*^9, 
  3.879659056007758*^9}},ExpressionUUID->"533d3909-2dc0-4461-b040-\
0540c6e6b1a6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1437, 829},
WindowMargins->{{17, Automatic}, {Automatic, 35}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"114ed296-e2ee-4bb6-bd88-147badebba0c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 236, 6, 200, "Title",ExpressionUUID->"29955daf-01cd-4fcb-bae4-b31c33b32906"],
Cell[CellGroupData[{
Cell[841, 32, 157, 3, 84, "Section",ExpressionUUID->"cfcc22cd-6c56-4439-b0bd-f5f657cbab6b"],
Cell[1001, 37, 1511, 24, 246, "Text",ExpressionUUID->"ef8202ac-beed-4046-9382-e6a1e9c61684"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2549, 66, 219, 5, 84, "Section",ExpressionUUID->"26697b35-35f1-4bb2-911b-f7e819fd94e0"],
Cell[2771, 73, 1129, 17, 159, "Text",ExpressionUUID->"59b48089-8f3d-4587-9524-888d94a66bba"],
Cell[CellGroupData[{
Cell[3925, 94, 224, 5, 67, "Subsection",ExpressionUUID->"0fa8a40e-7e8f-4b49-a722-2308777a2285"],
Cell[4152, 101, 665, 11, 73, "Text",ExpressionUUID->"ba358991-b2cc-44ad-aee7-9d420cfdbc7b"],
Cell[4820, 114, 7421, 227, 179, "Input",ExpressionUUID->"4b402a15-46d2-4e52-a54d-617a20fcc358"],
Cell[12244, 343, 511, 9, 102, "Text",ExpressionUUID->"2a442400-cf1f-4299-8845-32f7234773bb"],
Cell[CellGroupData[{
Cell[12780, 356, 467, 14, 37, "Input",ExpressionUUID->"ae53098f-35e0-4686-8bb4-f34999b06f01"],
Cell[13250, 372, 7521, 237, 150, "Output",ExpressionUUID->"a6dcb80a-270f-46c6-9bab-8d068a4657e8"]
}, Open  ]],
Cell[20786, 612, 333, 7, 44, "Text",ExpressionUUID->"a3e208f5-c83e-4e2a-a172-03d8574d202e"],
Cell[CellGroupData[{
Cell[21144, 623, 220, 5, 37, "Input",ExpressionUUID->"2dfe4717-a495-4e76-9f34-dafbd736f7d3"],
Cell[21367, 630, 7020, 222, 150, "Output",ExpressionUUID->"054b0565-2374-4169-b4c0-ae525c4fa3bf"]
}, Open  ]],
Cell[28402, 855, 1106, 18, 217, "Text",ExpressionUUID->"c6921f84-0952-411c-bd4c-2ec1227b70bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29545, 878, 226, 5, 67, "Subsection",ExpressionUUID->"952d73fb-ffe1-4f30-b632-2751d60469b8"],
Cell[29774, 885, 1461, 22, 246, "Text",ExpressionUUID->"e848c97a-cbd6-4562-bfc0-ea38be34ae2e"],
Cell[CellGroupData[{
Cell[31260, 911, 177, 3, 56, "Subsubsection",ExpressionUUID->"0715499f-bd76-4a66-970d-b2383d41263c"],
Cell[31440, 916, 642, 11, 102, "Text",ExpressionUUID->"72532dfa-b80b-496c-b932-be6e02db66ae"],
Cell[CellGroupData[{
Cell[32107, 931, 2374, 62, 142, "Input",ExpressionUUID->"8506ac0d-d695-4f48-93af-2780a059e8c6"],
Cell[34484, 995, 2236, 61, 139, "Output",ExpressionUUID->"fd5ad141-270f-4d3c-a628-c4d00e257bab"]
}, Open  ]],
Cell[36735, 1059, 548, 10, 73, "Text",ExpressionUUID->"53622335-0b48-4a47-905e-bb58945fecd9"],
Cell[CellGroupData[{
Cell[37308, 1073, 294, 6, 37, "Input",ExpressionUUID->"bfcb247c-358a-4f3f-a429-2b911b0f067c"],
Cell[37605, 1081, 2437, 68, 125, "Output",ExpressionUUID->"1208149e-cb43-4ae1-b450-d0c285a1bbbc"]
}, Open  ]],
Cell[40057, 1152, 1492, 25, 332, "Text",ExpressionUUID->"6512745a-9d1f-4a5e-b0e4-c0ab49cdd87d"],
Cell[CellGroupData[{
Cell[41574, 1181, 220, 4, 37, "Input",ExpressionUUID->"6350e80b-2e3e-47c8-bdf6-e3e4cbdfd897"],
Cell[41797, 1187, 2241, 61, 119, "Output",ExpressionUUID->"fbe030e8-1234-40b1-af0f-94ad29e7cf95"]
}, Open  ]],
Cell[44053, 1251, 441, 11, 47, "Text",ExpressionUUID->"533d3909-2dc0-4461-b040-0540c6e6b1a6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

